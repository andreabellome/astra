function [rr, vv, kep] = EphCA_car(n, t)
%-------------------------------------------------------------------------
% This function computes the ephemerides for comets with analytical
% Keplerian dynamics propagation from a reference state obtained from
% NASA HORIZONS. Orbit is assumed to be keplerian. 
%
%
% INPUTS:
%
%       n: ID of the comet. [ND]
%       t: epoch at which the ephemerides should be computed. [MJD2000]
%
%
% OUTPUTS:
%
%       rr: vector [1x3] containing position of the comet. [km]
%       vv: vector [1x3] containing velocity of the comet. [km/s]
%       kep: keplerian elements for the comet. [sma, ecc, incl, Om, om, th]
%       (it can be added as output).
%
%
% NOTE: All the inputs required by the user are designed as 'user input'.
%
%
% Functions used:  
%
%               propagateKepler.m
%               car2kep.m
%
%
% Author:     
%               Andrea Bellome (main structure).
%               Jose Ignacio Rico Alvarez (modifications to apply the code
%               for all the considered comets).
%
%
% History of modifications:
%               Creation date: 18 - June - 2021
%
% -------------------------------------------------------------------------

%% Load all ephemerides:
persistent coms

if isempty(coms)
    load('allCOMEphemeris.mat');
    coms   = allCOMEphemeris;
end

%% Astronomical Constants:
muSun      = 132724487690;                                                  % Sun's gravitational parameter. [km^3/s^2]

%% Timeframe in MJD2000:
Timeframe  = [7304.50000000000,...
            7670.50000000000,...
            8035.50000000000,...
            8400.50000000000,...
            8765.50000000000,...
            9131.50000000000,...
            9496.50000000000,...
            9861.50000000000,...
            10226.5000000000,...
            10592.5000000000,...
            10957.5000000000,...
            11322.5000000000,...
            11687.5000000000,...
            12053.5000000000,...
            12418.5000000000,...
            12783.5000000000,...
            13148.5000000000,...
            13514.5000000000,...
            13879.5000000000,...
            14244.5000000000,...
            14609.5000000000,...
            14975.5000000000,...
            15340.5000000000,...
            15705.5000000000,...
            16070.5000000000,...
            16436.5000000000,...
            16801.5000000000,...
            17166.5000000000,...
            17531.5000000000,...
            17897.5000000000,...
            18262.5000000000,...
            18627.5000000000,...
            18992.5000000000,...
            19358.5000000000,...
            19723.5000000000,...
            20088.5000000000,...
            20453.5000000000,...
            20819.5000000000,...
            21184.5000000000,...
            21549.5000000000,...
            21914.5000000000,...
            22280.5000000000,...
            22645.5000000000,...
            23010.5000000000,...
            23375.5000000000,...
            23741.5000000000,...
            24106.5000000000,...
            24471.5000000000,...
            24836.5000000000,...
            25202.5000000000,...
            25567.5000000000,...
            25932.5000000000,...
            26297.5000000000,...
            26663.5000000000,...
            27028.5000000000,...
            27393.5000000000,...
            27758.5000000000,...
            28124.5000000000,...
            28489.5000000000,...
            28854.5000000000,...
            29219.5000000000,...
            29585.5000000000,...
            29950.5000000000,...
            30315.5000000000,...
            30680.5000000000,...
            31046.5000000000,...
            31411.5000000000,...
            31776.5000000000,...
            32141.5000000000,...
            32507.5000000000,...
            32872.5000000000,...
            33237.5000000000,...
            33602.5000000000,...
            33968.5000000000,...
            34333.5000000000,...
            34698.5000000000,...
            35063.5000000000,...
            35429.5000000000,...
            35794.5000000000,...
            36159.5000000000,...
            36524.5000000000];  % (User input). Define the considered epoch used in HORIZONS. [MJD2000]

%% Load ephemerides:
maxID      = 463;                                                           % (User input). Maximum comet id.

% --> Check if available comet:
if n > maxID
    warning('error: comet not found');
    rr  = NaN;    
    vv  = NaN;
    kep = NaN;
    return
end

%% Ephemerides w.r.t. a given epoch:
DTs       = abs(Timeframe - t);                                             % Find the closest date.
[~,row]   = min(DTs);
tref      = Timeframe(row);

r         = (n - 1)*length(Timeframe) + 1;                                  
s         = r + row - 1;

rr0       = coms(s,2:4);
vv0       = coms(s,5:7);

%% Cartesian elements on the desired date:
[~,car]   = propagateKepler(rr0, vv0, (t - tref)*86400, muSun);
rr        = car(1:3);
vv        = car(4:6);

%% Keplerian elements on the desired date: (they could be calculated. Add the corresponding function output)
if nargout == 3
    kep = car2kep(car, muSun);
end

end
